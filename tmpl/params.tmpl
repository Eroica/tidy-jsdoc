<?js
    var params = obj;
    var self = this;

    /* sort subparams under their parent params (like opts.classname) */
    var parentParam = null;
    params.forEach(function(param, i) {
        var paramRegExp;

        if (!param) {
            return;
        }

        if (parentParam && parentParam.name && param.name) {
            paramRegExp = new RegExp('^(?:' + parentParam.name + '(?:\\[\\])*)\\.(.+)$');

            if ( paramRegExp.test(param.name) ) {
                param.name = RegExp.$1;
                parentParam.subparams = parentParam.subparams || [];
                parentParam.subparams.push(param);
                params[i] = null;
            }
            else {
                parentParam = param;
            }
        }
        else {
            parentParam = param;
        }
    });

    /* determine if we need extra columns, "attributes" and "default" */
    params.hasAttributes = false;
    params.hasDefault = false;
    params.hasName = false;

    params.forEach(function(param) {
        if (!param) { return; }

        if (param.optional || param.nullable || param.variable) {
            params.hasAttributes = true;
        }

        if (param.name) {
            params.hasName = true;
        }

        if (typeof param.defaultvalue !== 'undefined') {
            params.hasDefault = true;
        }
    });
?>

<table class="table table-bordered params">
    <thead>
        <tr>
            <?js if (params.hasName) {?>
            <th>Name</th>
            <?js } ?>

            <th>Type</th>

            <?js if (params.hasAttributes) {?>
            <th>Attributes</th>
            <?js } ?>

            <?js if (params.hasDefault) {?>
            <th>Default</th>
            <?js } ?>

            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        <?js= self.partial('params-rows.tmpl', params) ?>
    </tbody>
</table>
